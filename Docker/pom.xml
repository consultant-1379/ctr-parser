<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>com.ericsson.aia</groupId>
        <artifactId>integration</artifactId>
        <version>1.0.38</version>
    </parent>

    <artifactId>docker-image</artifactId>
    <groupId>com.ericsson.component.aia.docker.eventdatacollector</groupId>
    <name>event data collector docker image</name>
    <version>1.0.0-SNAPSHOT</version>
    <modelVersion>4.0.0</modelVersion>

    <properties>
        <git.repository>AIA/microservices/ctr-parser/</git.repository>
        <docker.resource.phase>install</docker.resource.phase>
        <docker.create.phase>install</docker.create.phase>
        <docker.push.phase>deploy</docker.push.phase>
        <docker.registry>armdocker.rnd.ericsson.se</docker.registry>
        <docker.repository>proj-ec-son-drop</docker.repository>
        <docker.image.name>event-data-collector</docker.image.name>
        <docker.folder>.</docker.folder>
        <!-- non docker properties -->

        <apeps.directory>staging/ericsson/apeps</apeps.directory>
        <apeps.log.directory>staging/ericsson/log/apeps</apeps.log.directory>
        <eps.directory>staging/ericsson/eps/</eps.directory>
        <apeps.eps.flow.directory>staging/var/ericsson/eps/apepsflow/</apeps.eps.flow.directory>
        <version.model>3.1.39</version.model>
        <version.eps.jse>3.0.20</version.eps.jse>
        <version.eps-extensions>3.0.41</version.eps-extensions>
        <aia.avro.support.version>3.0.4</aia.avro.support.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Kafka avro versions -->
        <kafka.version>1.0.1</kafka.version>
        <version.schema-registry-client>3.0.24</version.schema-registry-client>
        <version.avro-common>3.0.25</version.avro-common>
        <version.junit>4.12</version.junit>
        <version.ipl>1.0.22</version.ipl>
        <velocity.version>1.7</velocity.version>
        <version.mediation>3.1.36</version.mediation>

        <!--testing deps -->
        <version.wiremock>1.58</version.wiremock>

        <schemas.location>${basedir}/src/test/resources/schemas</schemas.location>
    </properties>

    <scm>
        <developerConnection>${ericsson.scm.url}</developerConnection>
        <connection>${ericsson.scm.url}</connection>
        <tag>HEAD</tag>
    </scm>

    <dependencies>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka.version}</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.11</artifactId>
            <version>${kafka.version}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.ericsson.component.aia.services.eps</groupId>
            <artifactId>eps-jse</artifactId>
            <version>${version.eps.jse}</version>
            <classifier>bin</classifier>
            <type>tar.gz</type>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.hornetq</groupId>
                    <artifactId>hornetq-core-client</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.hornetq</groupId>
                    <artifactId>hornetq-commons</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.ericsson.component.aia.services.eps</groupId>
                    <artifactId>eps-io-adapter-impl</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.ericsson.component.aia.services.eps</groupId>
                    <artifactId>eps-processing-engine-esper</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.ericsson.component.aia.services.eps</groupId>
                    <artifactId>eps-builtin-components-mesa</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.ericsson.component.aia.services.eps</groupId>
                    <artifactId>eps-mesa-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.ericsson.component.aia.services.eps</groupId>
                    <artifactId>eps-builtin-components</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.espertech</groupId>
                    <artifactId>esper</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-io</artifactId>
                    <groupId>commons-io</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>core-emodel-schemata-xsd-jar</artifactId>
                    <groupId>com.ericsson.oss.itpf.modeling</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>modeling-common-jar</artifactId>
                    <groupId>com.ericsson.oss.itpf.modeling</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>model-repo-entities-jar</artifactId>
                    <groupId>com.ericsson.oss.itpf.modeling</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>model-service-jar</artifactId>
                    <groupId>com.ericsson.oss.itpf.modeling</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>model-service-api-jar</artifactId>
                    <groupId>com.ericsson.oss.itpf.modeling</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>model-deployment-api-jar</artifactId>
                    <groupId>com.ericsson.oss.itpf.modeling</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>model-deployment-client-jar</artifactId>
                    <groupId>com.ericsson.oss.itpf.modeling</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.ericsson.component.aia.services.exteps</groupId>
            <artifactId>exteps-io-integrationpoint</artifactId>
            <version>${version.eps-extensions}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.logging</groupId>
                    <artifactId>jboss-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.ericsson.oss.itpf.sdk</groupId>
                    <artifactId>sdk-cache-infinispan-non-cdi</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.infinispan</groupId>
                    <artifactId>infinispan-embedded</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.ericsson.component.aia.services.exteps</groupId>
            <artifactId>exteps-io-queuing</artifactId>
            <version>${version.eps-extensions}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.logging</groupId>
                    <artifactId>jboss-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.ericsson.oss.itpf.sdk</groupId>
                    <artifactId>sdk-cache-infinispan-non-cdi</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.infinispan</groupId>
                    <artifactId>infinispan-embedded</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.ericsson.component.aia.services.exteps</groupId>
            <artifactId>exteps-io-streaming</artifactId>
            <version>${version.eps-extensions}</version>
            <exclusions>
                <exclusion>
                    <artifactId>junit</artifactId>
                    <groupId>junit</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>mockito-all</artifactId>
                    <groupId>org.mockito</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>test-util</artifactId>
                    <groupId>com.ericsson.component.aia.mediation.netty</groupId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.logging</groupId>
                    <artifactId>jboss-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.ericsson.oss.itpf.sdk</groupId>
                    <artifactId>sdk-cache-infinispan-non-cdi</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.infinispan</groupId>
                    <artifactId>infinispan-embedded</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.ericsson.component.aia.services.exteps</groupId>
            <artifactId>exteps-eh-parser</artifactId>
            <version>${version.eps-extensions}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-lang3</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>mockito-all</artifactId>
                    <groupId>org.mockito</groupId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.logging</groupId>
                    <artifactId>jboss-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.ericsson.component.aia.services.exteps</groupId>
            <artifactId>exteps-eh-header-cache</artifactId>
            <version>${version.eps-extensions}</version>
            <exclusions>
                <exclusion>
                    <artifactId>junit</artifactId>
                    <groupId>junit</groupId>
                </exclusion>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>test-util</artifactId>
                    <groupId>com.ericsson.component.aia.mediation.netty</groupId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.logging</groupId>
                    <artifactId>jboss-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.ericsson.oss.itpf.sdk</groupId>
                    <artifactId>sdk-cache-infinispan-non-cdi</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.infinispan</groupId>
                    <artifactId>infinispan-embedded</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.ericsson.oss.mediation.streaming</groupId>
            <artifactId>event-parser-jar</artifactId>
            <version>1.10.1</version>
        </dependency>
        <!-- kafka avro dependencies -->
        <dependency>
            <groupId>com.ericsson.component.aia.common.avro</groupId>
            <artifactId>kafka-avro-decoder</artifactId>
            <version>${aia.avro.support.version}</version>
            <type>jar</type>
        </dependency>
        <!-- EPS dependencies -->
        <dependency>
            <groupId>com.ericsson.component.aia.model</groupId>
            <artifactId>pojo</artifactId>
            <version>${version.model}</version>
        </dependency>
        <dependency>
            <groupId>com.ericsson.component.aia.model</groupId>
            <artifactId>xml</artifactId>
            <version>${version.model}</version>
        </dependency>
        <dependency>
            <groupId>com.ericsson.component.aia.model</groupId>
            <artifactId>avro-json</artifactId>
            <version>${version.model}</version>
            <exclusions>
                <exclusion>
                    <artifactId>mockito-all</artifactId>
                    <groupId>org.mockito</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.ericsson.component.aia.model</groupId>
            <artifactId>base</artifactId>
            <version>${version.model}</version>
        </dependency>
        <dependency>
            <groupId>com.ericsson.component.aia.common.avro</groupId>
            <artifactId>avro-common</artifactId>
            <version>${version.avro-common}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.9.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.9.1</version>
        </dependency>
        <dependency>
            <groupId>com.ericsson.component.aia.model</groupId>
            <artifactId>schema-registry-client</artifactId>
            <version>${version.schema-registry-client}</version>
            <exclusions>
                <exclusion>
                    <artifactId>com.fasterxml.jackson.core</artifactId>
                    <groupId>jackson-databind</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>com.fasterxml.jackson.core</artifactId>
                    <groupId>jackson-annotations</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>com.fasterxml.jackson.core</artifactId>
                    <groupId>jackson-core</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- added as needed by bit -->
        <dependency>
            <groupId>com.ericsson.component.aia.mediation.parser.event</groupId>
            <artifactId>asn</artifactId>
            <version>${version.mediation}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.objsys.asn1j</groupId>
                    <artifactId>objsys-asn1-runtime</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.ericsson.component.aia.mediation.parser.event</groupId>
            <artifactId>celltrace</artifactId>
            <version>${version.mediation}</version>
        </dependency>
        <dependency>
            <groupId>com.ericsson.component.aia.mediation.parser.event</groupId>
            <artifactId>ebm</artifactId>
            <version>${version.mediation}</version>
        </dependency>
        <dependency>
            <groupId>com.ericsson.component.aia.mediation.parser</groupId>
            <artifactId>handler</artifactId>
            <version>${version.mediation}</version>
        </dependency>
        <dependency>
            <groupId>com.ericsson.component.aia.mediation.parser</groupId>
            <artifactId>recordbuilder</artifactId>
            <version>${version.mediation}</version>
        </dependency>
        <dependency>
            <groupId>com.ericsson.component.aia.mediation.parser</groupId>
            <artifactId>avro-schema-provider</artifactId>
            <version>${version.mediation}</version>
        </dependency>

        <!-- EPS dependencies -->

        <!-- Test dependencies -->
        <dependency>
            <groupId>com.101tec</groupId>
            <artifactId>zkclient</artifactId>
            <version>0.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.ericsson.aia.ipl</groupId>
            <artifactId>IntegrationPointLibrary</artifactId>
            <version>${version.ipl}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.kafka</groupId>
                    <artifactId>kafka_2.11</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>${velocity.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock</artifactId>
            <version>${version.wiremock}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>1.1.1</version>
                </plugin>
                <!--This plugin's configuration is used to store Eclipse
                    m2e settings only. It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.apache.maven.plugins
                                        </groupId>
                                        <artifactId>
                                            maven-dependency-plugin
                                        </artifactId>
                                        <versionRange>
                                            [2.10,)
                                        </versionRange>
                                        <goals>
                                            <goal>analyze-dep-mgt</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore/>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <schemaRegistry.address>${schemas.location}/avro</schemaRegistry.address>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-dependencies</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.ericsson.component.aia.model</groupId>
                                    <artifactId>avro-json</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${schemas.location}</outputDirectory>
                                    <includes>**/avro/**</includes>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>build-docker-image</id>
            <activation>
                <property>
                    <name>build-docker-image</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare-flow</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${apeps.eps.flow.directory}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>../ERICeventparser_CXP9034567/src/main/resources/eps-flows
                                            </directory>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-all-dependencies</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${apeps.directory}/lib</outputDirectory>
                                    <includeScope>compile</includeScope>
                                </configuration>
                            </execution>
                            <execution>
                                <id>eps-jse_unpacking</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>unpack-dependencies</goal>
                                </goals>
                                <configuration>
                                    <includeArtifactIds>eps-jse</includeArtifactIds>
                                    <outputDirectory>${eps.directory}</outputDirectory>
                                    <excludes>**/lib/cglib-nodep*.jar, **/lib/stringtemplate*.jar,
                                        **/lib/disruptor-*.jar, **/lib/jgroups-*.jar, **/lib/commons-logging-*.jar,
                                        **/lib/commons-lang-*.jar, **/lib/commons-collections*.jar, **/lib/oro-*.jar,
                                        **/lib/velocity-*.jar, **/lib/kryo-*.jar, **/lib/jython-*.jar,
                                        **/lib/eps-io-adapter-impl*.jar, **/lib/eps-builtin-components*.jar,
                                        **/lib/eps-builtin-components-mesa-*.jar, **/lib/eps-mesa-api-*.jar,
                                        **/lib/eps-processing-engine-esper*.jar,**/lib/esper*.jar,
                                        **/lib/hazelcast*.jar, **/lib/hornetq-commons-*.jar,
                                        **/lib/hornetq-core-client-*.jar, **/lib/hornetq-journal-*.jar
                                    </excludes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>buildnumber-maven-plugin</artifactId>
                        <version>1.4</version>
                        <executions>
                            <execution>
                                <id>buildnumber</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>create</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <format>{0,number}</format>
                            <items>
                                <item>buildNumber</item>
                            </items>
                            <doCheck>false</doCheck>
                            <doUpdate>false</doUpdate>
                            <revisionOnScmFailure>unknownbuild</revisionOnScmFailure>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>create-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <imageName>${docker.registry}/${docker.repository}/${docker.image.name}</imageName>
                            <dockerDirectory>${docker.folder}</dockerDirectory>
                            <imageTags>
                                <imageTag>${project.version}-${buildNumber}</imageTag>
                                <imageTag>latest</imageTag>
                            </imageTags>
                            <useConfigFile>false</useConfigFile>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-release-plugin</artifactId>
                        <version>2.5.2</version>
                        <configuration>
                            <checkModificationExcludes>
                                <checkModificationExclude>Docker/pom.xml</checkModificationExclude>
                                <checkModificationExclude>Docker/Dockerfile</checkModificationExclude>
                            </checkModificationExcludes>
                            <preparationGoals>docker:build</preparationGoals>
                            <goals>clean</goals>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>release-docker-image</id>
            <activation>
                <property>
                    <name>release-docker-image</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>buildnumber-maven-plugin</artifactId>
                        <version>1.4</version>
                        <executions>
                            <execution>
                                <id>buildnumber</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>create</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <format>{0,number}</format>
                            <items>
                                <item>buildNumber</item>
                            </items>
                            <doCheck>false</doCheck>
                            <doUpdate>false</doUpdate>
                            <revisionOnScmFailure>unknownbuild</revisionOnScmFailure>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>create-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>push-image</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <imageName>${docker.registry}/${docker.repository}/${docker.image.name}</imageName>
                            <dockerDirectory>${docker.folder}</dockerDirectory>
                            <imageTags>
                                <imageTag>${project.version}-${buildNumber}</imageTag>
                                <imageTag>latest</imageTag>
                            </imageTags>
                            <useConfigFile>false</useConfigFile>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-release-plugin</artifactId>
                        <version>2.5.2</version>
                        <configuration>
                            <checkModificationExcludes>
                                <checkModificationExclude>Docker/pom.xml</checkModificationExclude>
                                <checkModificationExclude>Docker/Dockerfile</checkModificationExclude>
                            </checkModificationExcludes>
                            <preparationGoals>docker:build docker:push</preparationGoals>
                            <goals>validate</goals>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>publish-docker-image</id>
            <activation>
                <property>
                    <name>publish-docker-image</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-release-plugin</artifactId>
                        <version>2.5.2</version>
                        <configuration>
                            <checkModificationExcludes>
                                <checkModificationExclude>Docker/pom.xml</checkModificationExclude>
                                <checkModificationExclude>Docker/Dockerfile</checkModificationExclude>
                            </checkModificationExcludes>
                            <preparationGoals>validate</preparationGoals>
                            <goals>validate</goals>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
